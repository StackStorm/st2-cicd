---
version: '1.0'
description: Prepare st2cd and st2ci rules for next release.
input:
  - version
  - prev_version
  - oses
vars:
  - local_repo_sfx:
  - cwd: '/home/stanley'
tasks:
  init:
    action: core.local
    input:
      cmd: echo `date +'%s'`_`awk -v min=100 -v max=999 'BEGIN{srand(); print int(min+rand()*(max-min+1))}'`
    next:
      - when: <% succeeded() %>
        publish:
          - local_repo_sfx: <% result().stdout %>
        do:
          - get_host
  get_host:
    action: linux.dig
    input:
      hostname: st2-build-slave-ubuntu.service.consul
      rand: true
      count: 1
    next:
      - when: <% succeeded() %>
        publish:
          - host: <% result().result[0] %>
        do:
          - prep
  prep:
    next:
      - do:
          - prep_ci_rules
  prep_ci_rules:
    action: st2cd.st2_prep_release_ci_rules
    input:
      project: st2ci
      version: <% ctx().version %>
      prev_version: <% ctx().prev_version %>
      local_repo: <% 'st2ci' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
    next:
      - when: <% succeeded() %>
        do:
          - prep_cd_rules
      - when: <% failed() %>
        do:
        - cleanup_on_failure
  prep_cd_rules:
    action: st2cd.st2_prep_release_cd_rules
    input:
      project: st2cd
      version: <% ctx().version %>
      prev_version: <% ctx().prev_version %>
      oses: <% ctx().oses %>
      local_repo: <% 'st2cd' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
    next:
      - when: <% failed() %>
        do:
        - cleanup_on_failure

  cleanup_on_failure:
    action: core.remote
    input:
      cmd: <% 'rm -rf ' + ctx().cwd + '/st2*' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
    next:
      - do:
          - fail
