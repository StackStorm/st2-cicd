---
version: '2.0'

st2cd.st2_package_test:
    type: direct
    input:
        - hostname
        - dns_zone
        - instance_type
        - environment
        - key_name
        - keyfile
        - distro
        - role
        - release
        - version
        - bootstrap_branch
        - bootstrap_script
        - debug
        - st2_username: st2admin
        - st2_password: Ch@ngeMe

    task-defaults:
        on-error:
            - destroy_vm_on_failure: <% not $.debug %>
            - notify_failure: <% $.debug %>

    tasks:
        init_vars:
            action: std.noop
            publish:
                vm_fqdn: <% $.hostname %>.<% $.dns_zone %>
                installed_version: not installed
                bootstrap_script_url: <% coalesce(
                    $.bootstrap_script,
                    "https://raw.githubusercontent.com/StackStorm/st2-packages/" +
                        $.bootstrap_branch + "/scripts/st2_bootstrap.sh") %>
            on-success:
                - get_webui_server
        get_webui_server:
            action: core.local cmd="hostname"
            publish:
                webui_base_url: http://<% task(get_webui_server).result.stdout %>:8080
            on-success:
                - create_vm
        create_vm:
            action: st2cd.create_vm_role
            input:
                hostname: <% $.hostname %>
                instance_type: <% $.instance_type %>
                environment: <% $.environment %>
                key_name: <% $.key_name %>
                keyfile: <% $.keyfile %>
                dns_zone: <% $.dns_zone %>
                distro: pkg_<% $.distro %>
                role: <% $.role %>
            publish:
                vm_info: <% task(create_vm).result.tasks[2].result.result[0] %>
            on-success:
                - get_bootstrap_script
        get_bootstrap_script:
            action: core.remote_sudo
            input:
                hosts: <% $.vm_fqdn %>
                cmd: curl -Ss -k -o /tmp/st2_bootstrap.sh <% $.bootstrap_script_url %>
            on-success:
                - run_bootstrap_script
        run_bootstrap_script:
            action: core.remote_sudo
            input:
                hosts: <% $.vm_fqdn %>
                cmd: bash /tmp/st2_bootstrap.sh --<% $.release %> --version=<% coalesce($.version, '') %>
                timeout: 600
            on-success:
                - get_installed_version
        get_installed_version:
            action: st2cd.st2_get_installed_version
            input:
                host: <% $.vm_fqdn %>
            publish:
                installed_distro: <% task(get_installed_version).result.distro %>
                installed_version: <% task(get_installed_version).result.version %>
            on-success:
                - run_e2e_tests
        run_e2e_tests:
            action: st2cd.st2_e2e_tests
            input:
                host: <% $.vm_fqdn %>
                st2_username: <% $.st2_username %>
                st2_password: <% $.st2_password %>
            on-success:
                - destroy_vm: <% not $.debug %>
                - notify_success: <% $.debug %>


        destroy_vm:
            action: st2cd.destroy_vm
            input:
                hostname: <% $.hostname %>
            on-complete:
                - notify_success
        notify_success:
            action: slack.chat.postMessage
            input:
                channel: "#thunderdome"
                text: ""
                attachments: '[{"title": "[st2cd.st2_package_test: SUCCEEDED]", "title_link": "<% $.webui_base_url %>/#/history/<% env().st2_execution_id %>/general", "text": "HOSTNAME: <% $.vm_fqdn %>\nBOOTSTRAP: <% $.bootstrap_script_url %>\nDISTRO: <% $.distro %>\nRELEASE: <% $.release %>\nVERSION: <% coalesce($.version, ''latest'') %>\nVERSION INSTALLED: <% $.installed_version %>", "color": "#008000"}]'


        destroy_vm_on_failure:
            action: st2cd.destroy_vm
            input:
                hostname: <% $.hostname %>
            on-complete:
                - notify_failure
        notify_failure:
            action: slack.chat.postMessage
            input:
                channel: "#thunderdome"
                text: ""
                attachments: '[{"title": "[st2cd.st2_package_test: FAILED]", "title_link": "<% $.webui_base_url %>/#/history/<% env().st2_execution_id %>/general", "text": "HOSTNAME: <% $.vm_fqdn %>\nBOOTSTRAP: <% $.bootstrap_script_url %>\nDISTRO: <% $.distro %>\nRELEASE: <% $.release %>\nVERSION: <% coalesce($.version, ''latest'') %>\nVERSION INSTALLED: <% $.installed_version %>", "color": "#FF0000"}]'
            on-complete:
                - fail
