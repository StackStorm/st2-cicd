---
  chain:
    -
      name: "get_build_server"
      ref: "linux.dig"
      params:
        hostname: "st2-build-slave-ubuntu.service.consul"
        rand: true
        count: 1
      publish:
        build_server: "{{get_build_server.result[0]}}"
      on-success: "clone_repo"
    -
      name: "clone_repo"
      ref: "st2cd.git_clone"
      params:
        hosts: "{{build_server}}"
        repo: "{{repo}}"
        target: "{{repo_target}}"
        branch: "{{branch}}"
      publish:
        repodir: "{{clone_repo[build_server].stdout}}"
      on-success: "version"
    -
      name: "version"
      ref: "core.remote"
      params:
        hosts: "{{build_server}}"
        cmd: "cd /tmp/{{repodir}} && cat version.txt | cut -d '.' -f 1-2"
      publish:
        version: "{{version[build_server].stdout | replace('\n', '')}}"
      on-success: "make_bwcdocs"
      on-failure: "clean_repo"
    -
      name: "make_bwcdocs"
      ref: "core.remote"
      params:
        hosts: "{{build_server}}"
        timeout: 2000
        cmd: 'cd {{repodir}} && sudo pip install --upgrade "virtualenv==15.1.0" && make bwcdocs'
      on-success: "s3cmd_docs"
      on-failure: "clean_repo"
    -
      name: "s3cmd_docs"
      ref: "st2cd.s3_docs"
      params:
        hosts: "{{build_server}}"
        repo: "/tmp/{{repodir}}/docs/build/html"
        location: "{% if branch == 'master' %}/latest/{% elif version|string() == st2kv.system.st2_stable_version|string() %}/{% endif %}"
        bucket: "{{docs_url}}"
        version: "/{{version}}/"
        timeout: 600
      on-success: "clean_repo"
      on-failure: "clean_repo"
    -
      name: "clean_repo"
      ref: "st2cd.git_clean"
      params:
        hosts: "{{build_server}}"
        repo: "{{repodir}}"
