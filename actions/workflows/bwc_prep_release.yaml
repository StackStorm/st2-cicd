---
version: '1.0'
description: Prepare bwc (st2 enterprise) for release.
input:
  - version
  - fork
  - host
  - cwd
  - local_repo_sfx:
tasks:
  init:
    action: core.local
    input:
      cmd: echo `date +'%s'`_`awk -v min=100 -v max=999 'BEGIN{srand(); print int(min+rand()*(max-min+1))}'`
    next:
      - when: <% succeeded() and (ctx().host = null) %>
        publish:
          - local_repo_sfx: <% result().stdout %>
        do:
          - get_host
      - when: <% succeeded() and (ctx().host != null) %>
        publish:
          - local_repo_sfx: <% result().stdout %>
        do:
          - prep
  get_host:
    action: linux.dig
    input:
      hostname: st2-build-slave-ubuntu.service.consul
      rand: true
      count: 1
    next:
      - when: <% succeeded() %>
        publish:
          - host: <% result().result[0] %>
        do:
          - prep
  prep:
    next:
      - do:
          - prep_bwc_enterprise_pkg
  prep_bwc_enterprise_pkg:
    action: st2cd.bwc_prep_release_for_enterprise_pkg
    input:
      project: bwc-enterprise-package
      version: <% ctx().version %>
      fork: <% ctx().fork %>
      local_repo: <% 'bwc_enterprise_package_' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
      cwd: <% ctx().cwd %>
    next:
      - when: <% succeeded() %>
        do:
          - prep_st2enterprise_ldap
  prep_st2enterprise_ldap:
    action: st2cd.st2_prep_release_for_enterprise_ldap
    input:
      project: st2-enterprise-auth-backend-ldap
      version: <% ctx().version %>
      fork: <% ctx().fork %>
      local_repo: <% 'st2enterprise_auth_ldap_' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
      cwd: <% ctx().cwd %>
    next:
      - when: <% succeeded() %>
        do:
          - prep_bwc_ui
  prep_bwc_ui:
    action: st2cd.bwc_prep_release_for_gui
    input:
      project: bwc-ui
      version: <% ctx().version %>
      fork: <% ctx().fork %>
      local_repo: <% 'bwc_ui_' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
      cwd: <% ctx().cwd %>
    next:
      - when: <% succeeded() %>
        do:
          - prep_bwc_docs
  prep_bwc_docs:
    action: st2cd.bwc_prep_release_for_ipfabric_docs
    input:
      project: ipfabric-docs
      version: <% ctx().version %>
      fork: <% ctx().fork %>
      local_repo: <% 'bwc_ipfabric_docs_' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
      cwd: <% ctx().cwd %>
    next:
      - when: <% succeeded() %>
        do:
          - prep_bwc_installer
  prep_bwc_installer:
    action: st2cd.bwc_prep_release_for_bwc_installer
    input:
      project: bwc-installer
      version: <% ctx().version %>
      fork: <% ctx().fork %>
      local_repo: <% 'bwc-installer_' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
      cwd: <% ctx().cwd %>
  cleanup_on_failure:
    action: core.remote
    input:
      cmd: <% 'rm -rf ' + ctx().cwd + '/st2*' + ctx().local_repo_sfx + ' ' + ctx().cwd + '/bwc*' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
    next:
      - do:
          - fail
