---
  vars:
    root_dir: "/opt/puppet"
    username: "cibuild"
    password: "cibuild"
  chain:
    -
      name: "create_vm_role"
      ref: "st2cd.create_vm_role"
      params:
        hostname: "{{hostname}}"
        instance_type: "{{instance_type}}"
        environment: "{{environment}}"
        key_name: "{{key_name}}"
        keyfile: "{{keyfile}}"
        distro: "{{distro}}"
        role: "{{role}}"
      on-success: "delete_existing_puppet"
    -
      name: "delete_existing_puppet"
      ref: "linux.rm"
      params:
        hosts: "{{hostname}}"
        target: "{{root_dir}}"
        force: true
        recursive: true
        sudo: true
      on-success: "clone_st2workroom"
    -
      name: "clone_st2workroom"
      ref: "core.remote_sudo"
      params:
        cmd: "git clone {{repo}} {{root_dir}} -b {{branch}}"
        hosts: "{{hostname}}"
      on-success: "bootstrap_workroom"
    -
      name: "bootstrap_workroom"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "{{root_dir}}/script/bootstrap-st2express"
        cwd: "{{root_dir}}"
        timeout: 3000
      on-success: "add_ci_user"
    -
      name: "add_ci_user"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "useradd {{username}}"
      on-success: "set_ci_password"
    -
      name: "set_ci_password"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "echo {{password}} | passwd {{username}} --stdin"
      on-success: "get_st2_token"
    -
      name: "get_st2_token"
      ref: "st2cd.get_st2_token"
      params:
        hosts: "{{hostname}}"
        st2_username: "{{username}}"
        st2_password: "{{password}}"
      publish:
        st2_token: "{{get_st2_token[hostname].stdout.token}}"
      on-success: "run_tests"
    -
      name: "run_tests"
      ref: "st2cd.e2e_tests"
      params:
        hostname: "{{hostname}}"
        build: "{{build}}"
        token: "{{st2_token}}"
      on-success: "destroy_vm"
    -
      name: "destroy_vm"
      ref: "st2cd.destroy_vm"
      params:
        hostname: "{{hostname}}"
  default: "get_st2_token"
