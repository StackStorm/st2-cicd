---
  vars:
    root_dir: "/opt/puppet"
    st2_username: "cibuild"
    st2_password: "cibuild"
  chain:
    -
      name: "destroy_vm_if_exists"
      ref: "st2cd.destroy_vm"
      params:
        hostname: "{{hostname}}"
      on-success: "create_vm_role"
    -
      name: "create_vm_role"
      ref: "st2cd.create_vm_role"
      params:
        hostname: "{{hostname}}"
        instance_type: "{{instance_type}}"
        environment: "{{environment}}"
        key_name: "{{key_name}}"
        keyfile: "{{keyfile}}"
        distro: "{{distro}}"
        role: "{{role}}"
      publish:
        distro: "{{distro}}"
      on-success: "delete_existing_puppet"
    -
      name: "delete_existing_puppet"
      ref: "linux.rm"
      params:
        hosts: "{{hostname}}"
        target: "{{root_dir}}"
        force: true
        recursive: true
        sudo: true
      on-success: "write_initial_answers_file"
    -
      # Write answers.yaml file which will be used for initial provision / install
      name: "write_initial_answers_file"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: |
            cat <<EOT >> /tmp/answers_initial.yaml
            st2::version: {{initial_version}}
            st2::revision: {{initial_build}}
            st2::repo_base: {{dl_server}}
            EOT
      on-success: "write_upgrade_answers_file"
    -
      # Write answers.yaml file which will be used for upgrade
      name: "write_upgrade_answers_file"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: |
            cat <<EOT >> /tmp/answers_upgrade.yaml
            st2::version: {{upgrade_version}}
            st2::revision: {{upgrade_build}}
            st2::repo_base: {{dl_server}}
            EOT
      on-success: "bootstrap_workroom_with_answers_file"
    -
      name: "bootstrap_workroom_with_answers_file"
      ref: "core.remote_sudo"
      params:
        env:
          ENV: "{{branch}}"
          SKIP_OK_CHECK: "true"
          DISABLE_HUBOT: "true"
          CI: "true"
          DEBUG: "1"
        hosts: "{{hostname}}"
        cmd: "curl -sSL {{install_url}}  | sudo sh -s -- -a /tmp/answers_initial.yaml"
        timeout: 3600
      on-success: "verify_no_default_ssh_keys_are_installed_for_stanley_user"
      on-failure: "rerun_bootstrap_workroom_with_answers_file"
    -
      name: "rerun_bootstrap_workroom_with_answers_file"
      ref: "core.remote_sudo"
      params:
        env:
          ENV: "{{branch}}"
          SKIP_OK_CHECK: "true"
          DISABLE_HUBOT: "true"
          CI: "true"
          DEBUG: "1"
        hosts: "{{hostname}}"
        cmd: "curl -sSL {{install_url}}  | sudo sh -s -- -a /tmp/answers.yaml"
        timeout: 3600
      on-success: "verify_no_default_ssh_keys_are_installed_for_stanley_user"
    -
      name: "verify_no_default_ssh_keys_are_installed_for_stanley_user"
      ref: "st2cd.st2workroom_verify_default_stanley_ssh_keys_are_not_installed"
      params:
        hosts: "{{hostname}}"
        sudo: true
      on-success: "install_default_public_ssh_key_for_stanley"
    # Note: We install a default SSH key for stanley so e2e tests below can use this key to test
    # remote actions
    # TODO: Port this to use answers file + update-system
    -
      name: "install_default_public_ssh_key_for_stanley"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: 'echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4kFg0ZNmdrSqFvP+kZbVDlOdxzKgkcg3tKT19JTAKljpQCqUcZAEIthp8KsesXmAErZ8ykOEuYRCjug4Wd9uyXeewg5SgJy2gz/0biCAToJ71XxrPMM5SgVk/0sWxRIbmkU7+gNga6OIcimNxH5flESRAQx+C1kD1sBMfPeJzMa48kZWKBpaScguWka1N1rVn7nDza7srqPn+7NmQDVF/+VkMOxCEJcbIXdc0hYzebatWklYIcoSuF0WETYJxmKCoL8stTFucCxDXzbPvwGL5WctdZKcu7MeAaodH8V3x7aCujXzsSILtU7mc7uewuM2iT3nukLqYOk6W4UFRBk8n defauly-stanley-test-key" >> /home/stanley/.ssh/authorized_keys'
      on-success: "install_default_private_ssh_key_for_stanley"
    -
      name: "install_default_private_ssh_key_for_stanley"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: 'echo -e "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAuJBYNGTZna0qhbz/pGW1Q5TnccyoJHIN7Sk9fSUwCpY6UAql\nHGQBCLYafCrHrF5gBK2fMpDhLmEQo7oOFnfbsl3nsIOUoCctoM/9G4ggE6Ce9V8a\nzzDOUoFZP9LFsUSG5pFO/oDYGujiHIpjcR+X5REkQEMfgtZA9bATHz3iczGuPJGV\nigaWknILlpGtTda1Z+5w82u7K6j5/uzZkA1Rf/lZDDsQhCXGyF3XNIWM3m2rVpJW\nCHKErhdFhE2CcZigqC/LLUxbnAsQ182z78Bi+VnLXWSnLuzHgGqHR/Fd8e2gro18\n7EiC7VO5nO7nsLjNok957pC6mDpOluFBUQZPJwIDAQABAoIBAHVoDVQ3G1/8emJd\nGlqgALEfFiQERqn4i/dkFqN3dpoleq7UNrhavXWnMi3uoNp7pqUTNYRbOYPhZ05f\n2vpcALv0lKBq8671fUchSCetbopN0RDSESHgMD+33OiG0g+0QgSGRzQLDm3/22bA\negXKTTwArYjbqj32wZgJDAEBwv33dckJLVEqnq1o54XNZpCGXw8LUJTlNCwWVzoA\nS+/nKClV333x6x5UZnyc4N3iUS4//T25lDLWXHCwGBQyOFIvqS1fzDa9/9qGKpns\nfqAnXxvZwMHat008cQcWgJ9ripLVO2aG8+slR1JL3qNgNBLAKOnVe8akLMW+azOn\nvGlsz+ECgYEA4wrNySwHRdlmd9s9y9QwIEA66Lt8QDRRoW5Kd6eJMTGpbz7ffnF2\nFw6Zy6JOSyi5p8PfiD0H5A1EqrboFoF50jJ5rmG6IwtUJFbWLrN1zaREDta2xuFQ\nfmtPxkXNOK9RkdW1m4j1cXpF9F1QylIzhvkkp45d4lOPWvc3oBpePmkCgYEA0BqS\neaOxbe1aZD+jiKu9WrmfkLc7Ch6KFV9ziuno0ZfZ740FQJk3diVBC7B0/MKUMlqF\nAg98wkKAGGyVDpMKtMkxRSXMnTGPbuEuyDmdM/XKVsE9JAJgvrbDiQHFkZPQRqEf\nJSFLN7hTBJyIDIakQEZQZ4d8eUY1OBDgZA8Ejw8CgYAyX/pK0W8Hq3XV0BpE+F55\nOWcYrkiiQjl+dOcm51BETv2GBlA2UNxfv0iWavuuJ2oR9B7LrqbqjZsXuZ+DJtUt\nsy9WZq6TCfdwXKgHEqBnsTO8ix1gwStH8W1w05n2IsgZcG5sBRZYSEXvMykyysxN\n/UeJucfQ6LNc/o8kAdW5SQKBgC5q3uUW6AqW+KSHtVhUxkWoRbknxZl6Ol6ODd2c\nUvv9HPVbxSIlisNlh96tm0qNtDSPED/naHKEFsJb5dt8XNT6U20TA1LErTOUMrUi\ndLgUSO+U5qhTh3TCm1bB+GmCSOCYK7RCet6Q1KOgro/ssFJN3L1a8R6z1EcPLJ3k\n46VtAoGAQcW0Ip7+8zrvQbHp3uLAjJskhYZTAKDI/REKrhdsL22OTF6H4lOObGPL\n8Ph7hy2BqJOtuzSoYfHl5Kci4/qcJ5TBYItrxYPo/JVxcB25xtSRCv7rtfpJuC2O\nq5MwK3rNIoQ1EBTc7DVIVm9WV11Py3x7FfZb4eQzhFPZFQsV9n0=\n-----END RSA PRIVATE KEY-----" > /home/stanley/.ssh/st2_stanley_key'
      on-success: "add_ci_user"
    -
      name: "add_ci_user"
      ref: "st2cd.add_ci_user"
      params:
        hosts: "{{hostname}}"
        distro: "{{distro}}"
        user: "{{st2_username}}"
        pass: "{{st2_password}}"
      on-success: "run_tests"
    -
      name: "run_tests"
      ref: "st2cd.e2e_tests"
      params:
        hostname: "{{hostname}}"
        build: "{{build}}"
        st2_username: "{{st2_username}}"
        st2_password: "{{st2_password}}"
        protocol: "https"
      on-success: "destroy_vm"
      on-failure: "restart_st2"
    -
      name: "restart_st2"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "st2ctl restart && sleep 20"
        timeout: 180
      on-success: "rerun_tests"
    -
      name: "rerun_tests"
      ref: "st2cd.e2e_tests"
      params:
        hostname: "{{hostname}}"
        build: "{{build}}"
        st2_username: "{{st2_username}}"
        st2_password: "{{st2_password}}"
        protocol: "https"
      on-success: "upgrade_stackstorm"
    -
      name: "upgrade_stackstorm"
      ref: "core.remote_sudo"
      params:
        env:
          ENV: "{{branch}}"
          SKIP_OK_CHECK: "true"
          DISABLE_HUBOT: "true"
          CI: "true"
          DEBUG: "1"
        hosts: "{{hostname}}"
        cmd: "curl -sSL {{install_url}}  | sudo sh -s -- -a /tmp/answers_upgrade.yaml"
        timeout: 3600
      on-success: "destroy_vm"
    # TODO: Run post upgrade checks
    -
      name: "destroy_vm"
      ref: "st2cd.destroy_vm"
      params:
        hostname: "{{hostname}}"
  default: "destroy_vm_if_exists"
