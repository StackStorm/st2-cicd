---
  chain:
    -
      name: "get_instance_dns"
      ref: "linux.dig"
      params:
        hostname: "{{hostname}}.{{dns_zone}}"
        count: 1
      on-success: "get_instances"
      notify:
        on-failure:
          routes:
            - slack
          message: "destroy_vm failure::get_instance_dns failure."
    -
      name: "get_instances"
      ref: "aws.ec2_get_only_instances"
      params: {}
      on-success: "id"
      notify:
        on-failure:
          routes:
            - slack
          message: "destroy_vm failure::AWS call to get instances list failed."
    -
      name: "id"
      ref: "core.local"
      params:
        cmd: "echo '{% for i in get_instances.result -%}{% if (i.private_dns_name + '.') == get_instance_dns.result[0] -%}{{i.id}}{%- endif %}{%- endfor %}'"
      on-success: "destroy_vm"
      notify:
        on-failure:
          routes:
            - slack
          message: "destroy_vm failure::Did not finding matching instance."
    -
      name: "destroy_vm"
      ref: "aws.ec2_terminate_instances"
      params:
        instance_ids: "{{id.stdout}}"
      on-success: "delete_cname"
      notify:
        on-failure:
          routes:
            - slack
          message: "destroy_vm failure::Deleting CNAME failed"
    -
      name: "delete_cname"
      ref: "aws.r53_zone_delete_cname"
      params:
        zone: "{{dns_zone}}"
        name: "{{hostname}}.{{dns_zone}}"
  default: "get_instance_dns"
