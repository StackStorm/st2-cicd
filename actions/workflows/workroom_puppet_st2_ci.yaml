---
  chain:
    -
      name: "get_build_server"
      ref: "linux.dig"
      params:
        hostname: "st2-build-slave-ubuntu.service.consul"
        rand: true
        count: 1
      publish:
        build_server: "{{get_build_server.result[0]}}"
      on-success: "clone_workroom_repo"
    -
      name: "clone_workroom_repo"
      ref: "st2cd.git_clone"
      params:
        hosts: "{{build_server}}"
        repo: "{{workroom_repo}}"
        branch: "{{workroom_clone_branch}}"
        target: "{{repo_target}}"
      publish:
        workroom_repodir: "{{clone_repo[build_server].stdout}}"
        workroom_target_branch: "puppet_st2_ci_{{distro}}"
      on-success: "set_puppet_st2_ref_in_workroom_puppetfile"
    -
      name: "setup_workroom_branch"
      ref: "st2cd.workroom_puppet_st2_ci_setup"
      params:
        build_server: "{{build_server}}"
        puppet_st2_branch: "{{puppet_st2_branch_to_test}}"
        workroom_target_branch: "{{workroom_target_branch}}"
        workroom_repo_dir: "{{workroom_repodir}}"
      publish:
      on-success: "run_workroom_tests"
    -
      name: "run_workroom_tests"
      ref: "core.local"
      params:
        cmd: "echo I work the workroom for {{distro}}" # Placeholder
      on-success: "delete_workroom_branch"
      on-failure: "delete_workroom_branch"
    -
      name: "delete_workroom_branch"
      ref: "core.remote"
      params:
        hosts: "{{build_server}}"
        cmd: "cd {{workroom_repodir}} && git checkout master && git push origin --delete {{workroom_target_branch}}"
      on-success: "delete_workroom_dir"
      on-failure: "delete_workroom_dir"
    -
      name: "delete_workroom_dir"
      ref: "core.remote"
      params:
        hosts: "{{build_server}}"
        cmd: "rm -rf {{workroom_repodir}}"
  default: "get_build_server"
