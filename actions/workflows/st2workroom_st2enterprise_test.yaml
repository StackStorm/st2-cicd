---
  # TODO: Split verify taks in small bash scripts
  vars:
    root_dir: "/opt/puppet"
    st2_username: "cibuild"
    st2_password: "cibuild"
  chain:
    -
      name: "create_vm_role"
      ref: "st2cd.create_vm_role"
      params:
        hostname: "{{hostname}}"
        instance_type: "{{instance_type}}"
        environment: "{{environment}}"
        key_name: "{{key_name}}"
        keyfile: "{{keyfile}}"
        distro: "{{distro}}"
        role: "{{role}}"
      publish:
        distro: "{{distro}}"
      on-success: "delete_existing_puppet_directory"
    -
      name: "delete_existing_puppet_directory"
      ref: "linux.rm"
      params:
        hosts: "{{hostname}}"
        target: "{{root_dir}}"
        force: true
        recursive: true
        sudo: true
      on-success: "write_answers_file"
    -
      name: "write_answers_file"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: |
            cat <<EOT >> /tmp/answers.yaml
            st2enterprise::token: "st2tester"
            st2::ldap: true
            st2::ldap::host: "localhost"
            st2::ldap::base_dn: "dc=stackstorm,dc=com"
            EOT
      on-success: "bootstrap_workroom_with_answers_file"
      on-failure: "destroy_vm"
    -
      name: "bootstrap_workroom_with_answers_file"
      ref: "core.remote_sudo"
      params:
        env:
          ENV: "{{branch}}"
          SKIP_OK_CHECK: "true"
          DISABLE_HUBOT: "true"
          CI: "true"
        hosts: "{{hostname}}"
        cmd: "curl -sSL https://stackstorm.com/install.sh -o /tmp/bootstrap.sh && chmod +x /tmp/bootstrap.sh && /tmp/bootstrap.sh -a /tmp/answers.yaml"
        timeout: 1800
      on-success: "add_ci_user"
    -
      name: "add_ci_user"
      ref: "st2cd.add_ci_user"
      params:
        hosts: "{{hostname}}"
        distro: "{{distro}}"
        user: "{{st2_username}}"
        pass: "{{st2_password}}"
      on-success: "verify_rbac_is_enabled"
      on-failure: "destroy_vm"
    -
      name: "verify_rbac_is_enabled"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "grep -zlP '\\[rbac\\]\\senable\\s?=\\s?True' /etc/st2/st2.conf"
        timeout: 10
      on-success: "verify_flow_is_installed"
      on-failure: "destroy_vm"
    -
      name: "verify_flow_is_installed"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: 'test -d /opt/stackstorm/static/webui/flow || (echo "Flow directory doesnt exist" ; exit 1)'
        timeout: 10
      on-success: "verify_flow_is_available"
      on-failure: "destroy_vm"
    -
      name: "verify_flow_is_available"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: 'curl -k https://'
        timeout: 10
      on-success: "verify_ldap_auth_backend_is_installed"
      on-failure: "destroy_vm"
    -
      name: "verify_ldap_auth_backend_is_installed"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: 'python -c "import st2auth_enterprise_ldap_backend"'
        timeout: 10
      on-success: "verify_ldap_auth_backend_is_configured"
      on-failure: "destroy_vm"
    -
      # TODO: Also check backend_kwargs are configured correctly
      name: "verify_ldap_auth_backend_is_configured"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "grep -zlP 'backend\\s?=\\s?ldap' /etc/st2/st2.conf"
        timeout: 10
      on-success: "run_tests"
      on-failure: "destroy_vm"
    -
      name: "run_tests"
      ref: "st2cd.e2e_tests"
      params:
        hostname: "{{hostname}}"
        build: "{{build}}"
        st2_username: "{{st2_username}}"
        st2_password: "{{st2_password}}"
        protocol: "https"
      on-success: "destroy_vm"
      on-failure: "restart_st2"
    -
      name: "restart_st2"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "st2ctl restart && sleep 20"
        timeout: 40
      on-success: "rerun_tests"
      on-failure: "rerun_tests"
    -
      name: "rerun_tests"
      ref: "st2cd.e2e_tests"
      params:
        hostname: "{{hostname}}"
        build: "{{build}}"
        st2_username: "{{st2_username}}"
        st2_password: "{{st2_password}}"
        protocol: "https"
      on-success: "destroy_vm"
    -
      name: "destroy_vm"
      ref: "st2cd.destroy_vm"
      params:
        hostname: "{{hostname}}"
  default: "create_vm_role"
