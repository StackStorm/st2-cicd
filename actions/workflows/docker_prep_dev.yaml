---
version: '1.0'
description: Prepare docker images for st2 release
input:
  - version
  - org
  - host
  - cwd
vars:
  - dev_version: <% ctx().version.split('.')[0] + '.' + ctx().version.split('.')[1] + 'dev' %>
  - local_repo_sfx:
tasks:
  init:
    action: core.local
    input:
      cmd: echo `date +'%s'`_`awk -v min=100 -v max=999 'BEGIN{srand(); print int(min+rand()*(max-min+1))}'`
    next:
      - when: <% succeeded() and (ctx().host = null) %>
        publish:
          - local_repo_sfx: <% result().stdout %>
        do:
          - get_host
      - when: <% succeeded() and (ctx().host != null) %>
        publish:
          - local_repo_sfx: <% result().stdout %>
        do:
          - finalize

  get_host:
    action: linux.dig
    input:
      hostname: st2-build-slave-ubuntu.service.consul
      rand: true
      count: 1
    next:
      - when: <% succeeded() %>
        publish:
          - host: <% result().result[0] %>
        do:
          - finalize

  finalize:
    next:
      - do:
          - prep_st2_dockerfiles

  prep_st2_dockerfiles:
    action: st2cd.docker_chg_ver
    input:
      project: st2-dockerfiles
      version: <% ctx().dev_version %>
      org: <% ctx().org %>
      branch: master
      local_repo: <% 'st2_dockerfiles_' + ctx().local_repo_sfx %>
      hosts: <% ctx().host %>
      cwd: <% ctx().cwd %>
    next:
      - when: <% failed() %>
        do:
          - cleanup_on_failure

  cleanup_on_failure:
    action: core.noop
    next:
      - when: <% ctx().local_repo_sfx %>
        do:
          - cleanup
      - when: <% not ctx().local_repo_sfx %>
        do:
          - fail

  cleanup:
    action: core.remote
    input:
      cmd: <% 'rm -rf ' + ctx().cwd + '/st2*' + ctx().local_repo_sfx + ' && rm -rf ~/.pypirc' %>
      hosts: <% ctx().host %>
    next:
      - do:
          - fail
