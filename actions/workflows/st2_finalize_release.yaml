version: '2.0'
stcd.st2_finalize_release:
    description: Finalize st2 release
    input:
        - version
        - fork
        - host
        - cwd
        - local_repo_sfx: null

    task-defaults:
        on-error:
            - cleanup_on_failure: <% $.local_repo_sfx != null %>

    tasks:
        init:
            action: core.local
            input:
                cmd: "echo `date +'%s'`_`awk -v min=100 -v max=999 'BEGIN{srand(); print int(min+rand()*(max-min+1))}'`"
            publish:
                local_repo_sfx: <% task(init).result.stdout %>
            on-success:
                - get_host: <% $.host = null %>
                - finalize: <% $.host != null %>


        get_host:
            action: linux.dig
            input:
                hostname: st2-build-slave-ubuntu.service.consul
                rand: true
                count: 1
            publish:
                host: <% task(get_host).result.result[0] %>
            on-success:
                - finalize


        finalize:
            on-complete:
                - make_st2docs_stable
        make_st2docs_stable:
            action: st2cd.st2_make_docs
            input:
                project: st2docs
                branch: v<% $.version.substring(0, $.version.lastIndexOf('.')) %>
                fork: <% $.fork %>
                local_repo: <% 'st2docs_' + $.local_repo_sfx %>
                hosts: <% $.host %>
                cwd: <% $.cwd %>
            on-success:
                - make_st2docs_latest
        make_st2docs_latest:
            action: st2cd.st2_make_docs
            input:
                project: st2docs
                branch: master
                fork: <% $.fork %>
                local_repo: <% 'st2docs_' + $.local_repo_sfx %>
                hosts: <% $.host %>
                cwd: <% $.cwd %>
            on-success:
                - get_next_version
        get_next_version:
            action: core.local
            input:
                cmd: "echo <% $.version %> | awk -F '[ .]' '{print $1\".\"$2\".\"$3+1}'"
            publish:
                next_patch_version: <% task(get_next_version).result.stdout.replace('\n', '') %>
            on-success:
                - st2_tag_release
        st2_tag_release:
            action: st2cd.st2_tag_release
            input:
                project: st2
                version: <% $.version %>
                fork: <% $.fork %>
                local_repo: <% 'st2_' + $.local_repo_sfx %>
                hosts: <% $.host %>
                cwd: <% $.cwd %>
            on-success:
                - st2_remove_patch_branch
        st2_remove_patch_branch:
            action: st2cd.git_delete_branch
            input:
                project: st2
                branch: <% $.version %>
                fork: <% $.fork %>
                hosts: <% $.host %>
                cwd: <% $.cwd %>
            on-success:
                - prep_st2_next_patch
        prep_st2_next_patch:
            action: st2cd.st2_prep_patch_release
                project: st2
                version: <% $.next_patch_version %>
                fork: <% $.fork %>
                local_repo: <% 'st2_' + $.local_repo_sfx %>
                hosts: <% $.host %>
                cwd: <% $.cwd %>
            on-success:
                - mistral_tag_release
        mistral_tag_release:
            action: st2cd.mistral_tag_release
            input:
                version: <% $.version %>
            on-success:
                - push_st2client
        push_st2client:
            action: st2cd.st2_pkg_st2client
            input:
                hosts: <% $.host %>


        cleanup_on_failure:
            action: core.remote
            input:
                cmd: <% 'rm -rf ' + $.cwd + '/st2*' + $.local_repo_sfx + ' && rm -rf ~/.pypirc' %>
                hosts: <% $.host %>
            on-complete:
                - fail
