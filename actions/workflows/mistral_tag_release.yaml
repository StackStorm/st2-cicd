---
version: '1.0'
description: Tag the release for Mistral.
input:
  - version
  - host
  - repo_main
  - repo_client
  - repo_action
  - repo_branch
  - repo_dir
  - debug
  - tagged: false
tasks:
  init:
    action: core.local
    input:
      cmd: echo `date +'%s'`_`awk -v min=100 -v max=999 'BEGIN{srand(); print int(min+rand()*(max-min+1))}'`
    next:
      - when: <% succeeded() %>
        publish:
          - local_repo_sfx: <% result().stdout %>
      - when: <% succeeded() and (ctx().host = null) %>
        do:
          - get_host
      - when: <% succeeded() and (ctx().host != null) %>
        do:
          - clone_repos
  get_host:
    action: linux.dig
    input:
      hostname: st2-build-slave-ubuntu.service.consul
      rand: true
      count: 1
    next:
      - when: <% succeeded() %>
        publish:
          - host: <% result().result[0] %>
        do:
          - clone_repos
  clone_repos:
    with:
      items: proj, repo in <% zip(list(mistral, mistralclient, st2mistral), list(ctx().repo_main, ctx().repo_client, ctx().repo_action)) %>
    action: st2cd.git_clone
    input:
      hosts: <% ctx().host %>
      repo: <% item(repo) %>
      branch: <% ctx().repo_branch %>
      target: <% ctx().repo_dir %>/<% item(proj) %>_<% ctx().local_repo_sfx %>
    next:
      - when: <% succeeded() %>
        publish:
          - clone_paths: <% dict(mistral=>result()[0].get(ctx().host).stdout, mistralclient=>result()[1].get(ctx().host).stdout, st2mistral=>result()[2].get(ctx().host).stdout) %>
        do:
          - tag_release
      - when: <% failed() %>
        do:
          - cleanup
  tag_release:
    action: st2cd.mistral_create_tag
    input:
      hosts: <% ctx().host %>
      version: <% ctx().version %>
      repo_main: <% ctx().clone_paths.get(mistral) %>
      repo_client: <% ctx().clone_paths.get(mistralclient) %>
      repo_action: <% ctx().clone_paths.get(st2mistral) %>
    next:
      - when: <% succeeded() %>
        publish:
          - tagged: true
      - do:
          - cleanup
  cleanup:
    action: core.remote
    input:
      cmd: <% 'rm -rf ' + ctx().repo_dir + '/*mistral*' + ctx().local_repo_sfx + '*' %>
      hosts: <% ctx().host %>
    next:
      - when: <% succeeded() and (not ctx().tagged) %>
        do:
          - fail
