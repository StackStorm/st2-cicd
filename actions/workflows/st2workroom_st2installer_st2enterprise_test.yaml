---
  vars:
    root_dir: "/opt/puppet"
    st2_username: "cibuild"
    st2_password: "cibuild"
  chain:
    -
      name: "create_vm_role"
      ref: "st2cd.create_vm_role"
      params:
        hostname: "{{hostname}}"
        instance_type: "{{instance_type}}"
        environment: "{{environment}}"
        key_name: "{{key_name}}"
        keyfile: "{{keyfile}}"
        distro: "{{distro}}"
        role: "{{role}}"
      publish:
        distro: "{{distro}}"
      on-success: "delete_existing_puppet_directory"
    -
      name: "delete_existing_puppet_directory"
      ref: "linux.rm"
      params:
        hosts: "{{hostname}}"
        target: "{{root_dir}}"
        force: true
        recursive: true
        sudo: true
      on-success: "write_answers_file"
    -
      name: "write_answers_file"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        # Note: We don't specify enterprise license key and other info.
        # This information is provided via the installer.
        cmd: |
            cat <<EOT >> /tmp/answers.yaml
            st2::version: {{version}}
            st2::revision: {{build}}
            st2::repo_base: {{dl_server}}
            EOT
      on-success: "bootstrap_workroom_with_answers_file"
    -
      name: "bootstrap_workroom_with_answers_file"
      ref: "core.remote_sudo"
      params:
        env:
          ENV: "{{branch}}"
          SKIP_OK_CHECK: "true"
          DISABLE_HUBOT: "true"
          CI: "true"
        hosts: "{{hostname}}"
        cmd: "curl -sSL https://install.stackstorm.com/  | sudo sh -s -- -a /tmp/answers.yaml"
        timeout: 3600
      on-success: "verify_no_default_keys_are_installed_for_stanley_user"
      on-failure: "rerun_bootstrap_workroom_with_answers_file"
    -
      name: "rerun_bootstrap_workroom_with_answers_file"
      ref: "core.remote_sudo"
      params:
        env:
          ENV: "{{branch}}"
          SKIP_OK_CHECK: "true"
          DISABLE_HUBOT: "true"
          CI: "true"
        hosts: "{{hostname}}"
        cmd: "curl -sSL https://install.stackstorm.com/  | sudo sh -s -- -a /tmp/answers.yaml"
        timeout: 3600
      on-success: "verify_no_default_keys_are_installed_for_stanley_user"
    -
      name: "verify_no_default_keys_are_installed_for_stanley_user"
      ref: "st2cd.st2workroom_verify_default_stanley_ssh_keys_are_not_installed"
      params:
        hosts: "{{hostname}}"
        sudo: true
      on-success: "run_installer"
    -
      name: "run_installer"
      ref: "st2cd.st2workroom_run_st2installer"
      params:
        hosts: "{{hostname}}"
        sudo: true
        installer_url: "https://{{ hostname }}/setup/"
        hostname: "{{ hostname }}"
        admin_username: "admin_username"
        system_username: "stanley"
        enterprise_key: "st2tester"
        timeout: 240
      on-success: "verify_rbac_is_enabled"
    # TODO: Add check which verfies that public + private SSH key has been installed
    -
      name: "verify_rbac_is_enabled"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: "grep -zlP '\\[rbac\\]\\senable\\s?=\\s?True' /etc/st2/st2.conf"
        timeout: 10
      on-success: "verify_default_rbac_admin_role_assignments_are_present"
    -
      # Verify that a default role for the following users exist:
      # - root_cli user
      # - stanley (system) user
      # - admin user
      # - hubot user
      name: "verify_default_rbac_admin_role_assignments_are_present"
      ref: "st2cd.st2workroom_st2enterprise_verify_default_rbac_admin_role_assignments_are_present"
      params:
        hosts: "{{hostname}}"
        sudo: true
      on-success: "verify_flow_is_installed"
    -
      name: "verify_flow_is_installed"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: '(test -d /opt/stackstorm/static/webui/flow && test -f /opt/stackstorm/static/webui/flow/index.html) || (echo "Flow directory doesnt exist" ; exit 1)'
        timeout: 10
      on-success: "verify_flow_is_available"
    -
      name: "verify_flow_is_available"
      ref: "core.remote_sudo"
      params:
        hosts: "{{hostname}}"
        cmd: 'sleep 20 && curl -sSL -k --fail https://127.0.0.1/flow'
        timeout: 30
      on-success: "destroy_vm"
    -
      name: "destroy_vm"
      ref: "st2cd.destroy_vm"
      params:
        hostname: "{{hostname}}"
  default: "create_vm_role"
