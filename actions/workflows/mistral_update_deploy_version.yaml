version: '2.0'
name: st2cd.mistral_update_deploy_version
description: Update Mistral version in deploy scripts.

workflows:

    main:
        type: direct
        input:
            - version
            - host
            - repo_puppet_st2
            - repo_branch
            - repo_dir
            - debug
        tasks:
            get_hosts:
                workflow: get_build_hosts
                input:
                    hosts: <% dict(build=>$.host) %>
                publish:
                    hosts: <% $.get_hosts.hosts %>
                on-success:
                    - clone_repos
            clone_repos:
                with-items:
                    - proj in <% list(puppet_st2) %>
                    - repo in <% list($.repo_puppet_st2) %>
                action: st2cd.git_clone
                input:
                    hosts: <% $.hosts.get(build) %>
                    repo: <% $.repo %>
                    branch: <% $.repo_branch %>
                    target: <% $.repo_dir %>/<% $.proj %>_<% $.repo_branch %>
                publish:
                    clone_paths: <%
                        dict(puppet_st2=>$.clone_repos[0].get($.hosts.get(build)).stdout) %>
                on-success:
                    - update_puppet_st2
                on-error:
                    - remove_repos
                    - fail
            update_puppet_st2:
                action: st2cd.mistral_update_puppet
                input:
                    hosts: <% $.hosts.get(build) %>
                    version: <% $.version %>
                    repo_puppet: <% $.clone_paths.get(puppet_st2) %>
                    repo_puppet_branch: <% $.repo_branch %>
                on-success:
                    - remove_repos
                on-error:
                    - remove_repos
                    - fail
            remove_repos:
                with-items: repo in <% list($.clone_paths.get(puppet_st2)) %>
                action: st2cd.git_clean
                input:
                    hosts: <% $.hosts.get(build) %>
                    repo: <% $.repo %>


    get_host:
        type: direct
        input:
            - host
            - type
        output:
            host: <% $.host %>
        tasks:
            has_host:
                action: std.noop
                on-success:
                    - get_host: <% $.host = null or $.host = '' or $.host = 'None' %>
                    - succeed: <% $.host != null and $.host != '' and $.host != 'None' %>
            get_host:
                action: linux.dig
                input:
                    hostname: <% $.type %>
                    rand: true
                    count: 1
                publish:
                    host: <% $.get_host.result[0] %>


    get_build_hosts:
        type: direct
        input:
            - hosts
        output:
            hosts: <% $.hosts %>
        tasks:
            get_build_host:
                workflow: get_host
                input:
                    host: <% $.hosts.get(build) %>
                    type: st2-build-slave-ubuntu.service.consul
                on-success:
                    - compose_hosts
            compose_hosts:
                action: std.noop
                publish:
                    hosts: <% dict(build=>$.get_build_host.host) %>
