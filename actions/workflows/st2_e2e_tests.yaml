---
version: '1.0'
description: Run the suite of end to end tests on the st2 host
input:
  - host_ip
  - host_fqdn
  - protocol
  - st2_username
  - st2_password
  - windows_host_ip
  - windows_host_fqdn
  - windows_username
  - windows_password
  - version
  - enterprise
tasks:
  init:
    action: core.noop
    next:
      - when: <% succeeded() %>
        publish:
          - st2_cli_env:
              ST2_BASE_URL: <% ctx().protocol %>://<% ctx().host_fqdn %>
              ST2_AUTH_URL: <% ctx().protocol %>://<% ctx().host_fqdn %>:9100
              ST2_API_URL: <% ctx().protocol %>://<% ctx().host_fqdn %>:9101
        do:
          - get_st2_token
  get_st2_token:
    action: st2cd.get_st2_token
    input:
      hosts: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
      st2_username: <% ctx().st2_username %>
      st2_password: <% ctx().st2_password %>
    next:
      - when: <% succeeded() %>
        publish:
          - st2_cli_env: <% ctx().st2_cli_env.set( ST2_AUTH_TOKEN, result().get(ctx().host_ip).stdout.get(token)) %>
        do:
          - setup_e2e_tests
  setup_e2e_tests:
    action: st2cd.setup_e2e_tests
    input:
      hosts: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
      version: <% ctx().version %>
      timeout: 220
    next:
      - when: <% succeeded() %>
        do:
          - run_basic_tests
          - run_quickstart_tests
  run_basic_tests:
    action: st2cd.st2_e2e_tests_test_basic
    input:
      host: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
  # Commented out in the original workflow
  # next:
  #   - when: <% succeeded() %>
  #     do:
  #       - run_quickstart_tests
  run_quickstart_tests:
    action: st2cd.st2_e2e_tests_test_quickstart
    input:
      host: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
      protocol: <% ctx().protocol %>
    next:
      - when: <% succeeded() %>
        do:
          - check_if_mistral_is_available
  check_if_mistral_is_available:
    action: core.noop
    next:
      - when: <% succeeded() and 'u18' in ctx().host_fqdn.toLower() %>
        do:
          # Mistral is not available on Ubuntu Bionic, so skip them
          - run_inquiry_tests
      - when: <% succeeded() and not 'u18' in ctx().host_fqdn.toLower() %>
        do:
          # Run Mistral tests after basic and quickstart
          - run_mistral_tests
  run_mistral_tests:
    action: st2cd.st2_e2e_tests_test_mistral
    input:
      host_fqdn: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
    next:
      - when: <% succeeded() %>
        do:
          - run_inquiry_tests
  run_inquiry_tests:
    action: st2cd.st2_e2e_tests_test_inquiry
    input:
      host: <% ctx().host_ip %>
      host_fqdn: <% ctx().host_fqdn %>
      env: <% ctx().st2_cli_env %>
      protocol: <% ctx().protocol %>
    next:
     - when: <% succeeded() %>
       do:
         - run_docs_tests
  run_docs_tests:
    action: core.remote
    input:
      hosts: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
      cmd: bats docs/*.bats
      cwd: /tmp/st2tests
      timeout: 1200
    next:
      - when: <% succeeded() %>
        do:
          - run_cli_tests
  run_cli_tests:
    action: core.remote
    input:
      hosts: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
      cmd: bats cli/*.bats
      cwd: /tmp/st2tests
      timeout: 1200
    next:
      - when: <% succeeded() %>
        do:
          - run_chatops_tests
  run_chatops_tests:
    action: core.remote
    input:
      hosts: <% ctx().host_ip %>
      env: <% ctx().st2_cli_env %>
      cmd: bats chatops/*.bats
      cwd: /tmp/st2tests
      timeout: 1200
  #   next:
  #     - when: <% succeeded() %>
  #       do:
  #         - run_chatops_e2e_tests
  # run_chatops_e2e_tests:
  #   action: st2cd.st2_chatops_e2e_tests
  #   input:
  #     host_ip: <% ctx().host_ip %>
  #     cwd: /tmp/st2tests
    next:
      - when: <% succeeded() %>
        do:
          - run_windows_tests
  run_windows_tests:
    action: st2cd.st2_e2e_tests_test_windows
    input:
      host: <% ctx().host_ip %>
      windows_host: <% ctx().windows_host_ip %>
      windows_username: <% ctx().windows_username %>
      windows_password: <% ctx().windows_password %>
      env: <% ctx().st2_cli_env %>
      protocol: <% ctx().protocol %>
    next:
      - when: <% succeeded() and (ctx().enterprise) %>
        do:
          - run_enterprise_tests
  run_enterprise_tests:
    action: st2cd.st2_enterprise_tests
    input:
      host_ip: <% ctx().host_ip %>
